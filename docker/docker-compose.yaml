version: '3.7'

services:
  zookeeper:
    image: bitnami/zookeeper:${ZOOKEEPER_IMAGE_TAG}
    container_name: zookeeper
    restart: ${RESTART_POLICY}
    networks:
      - backend
    environment:
      - TZ
      - ALLOW_ANONYMOUS_LOGIN
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka:${KAFKA_IMAGE_TAG}
    container_name: kafka
    networks:
      - backend
    depends_on:
      - zookeeper
    restart: ${RESTART_POLICY}
    environment:
      - TZ
      - KAFKA_ZOOKEEPER_CONNECT
      - KAFKA_BROKER_ID
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      - KAFKA_ADVERTISED_PORT
      - KAFKA_ADVERTISED_LISTENERS
      - ALLOW_PLAINTEXT_LISTENER
    volumes:
      - kafka-data:/bitnami/kafka
    ports:
      - 9092:9092

  kafdrop:
    image: obsidiandynamics/kafdrop:${KAFDROP_IMAGE_TAG}
    container_name: kafkawebui
    restart: ${RESTART_POLICY}
    depends_on:
      - kafka
    networks:
      - backend
    environment:
      - TZ
      - KAFKA_BROKERCONNECT
      - JVM_OPTS
    ports:
      - 9000:9000

networks:
  backend:
    driver: bridge
    name: backend

volumes:
  zookeeper-data:
    driver: local
    name: zookeeper-data
  kafka-data:
    driver: local
    name: kafka-data
